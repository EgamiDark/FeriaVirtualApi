--EJECUTAR ESTE CODIGO CON EL USUARIO SYS
ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE;
DROP USER FeriaVirtual CASCADE ;

CREATE USER FeriaVirtual IDENTIFIED BY FeriaVirtual;
GRANT DBA TO FeriaVirtual;

--EJECUTAR ESTE CODIGO CON EL USUARIO FeriaVirtual
--ELIMINAR TABLAS
DROP TABLE CONTRATO CASCADE CONSTRAINTS;
DROP TABLE ESTOFERP CASCADE CONSTRAINTS;
DROP TABLE ESTOFERTRANS CASCADE CONSTRAINTS;
DROP TABLE ESTPAGO CASCADE CONSTRAINTS;
DROP TABLE ESTPEDIDO CASCADE CONSTRAINTS;
DROP TABLE ESTSUBASTA CASCADE CONSTRAINTS;
DROP TABLE ESTVENTA CASCADE CONSTRAINTS;
DROP TABLE OFERTAPROD CASCADE CONSTRAINTS;
DROP TABLE OFERTATRANS CASCADE CONSTRAINTS;
DROP TABLE PAGO CASCADE CONSTRAINTS;
DROP TABLE PEDIDO CASCADE CONSTRAINTS;
DROP TABLE ROL CASCADE CONSTRAINTS;
DROP TABLE SUBASTATRANS CASCADE CONSTRAINTS;
DROP TABLE TIPOREFRIG CASCADE CONSTRAINTS;
DROP TABLE TIPOTRANS CASCADE CONSTRAINTS;
DROP TABLE TRANSPORTE CASCADE CONSTRAINTS;
DROP TABLE USUARIO CASCADE CONSTRAINTS;
DROP TABLE VENTALOCAL CASCADE CONSTRAINTS;

--CREAR TABLAS
CREATE TABLE contrato (
    idcontrato    INTEGER NOT NULL,
    fechacreacion DATE NOT NULL,
    fechatermino  DATE NOT NULL,
    idusuario     INTEGER NOT NULL
);

ALTER TABLE contrato ADD CONSTRAINT contrato_pk PRIMARY KEY ( idcontrato );

CREATE TABLE estoferp (
    idestoferp  INTEGER NOT NULL,
    descripcion VARCHAR2(150) NOT NULL
);

ALTER TABLE estoferp ADD CONSTRAINT estoferp_pk PRIMARY KEY ( idestoferp );

CREATE TABLE estofertrans (
    idestofertrans INTEGER NOT NULL,
    descripcion    VARCHAR2(150) NOT NULL
);

ALTER TABLE estofertrans ADD CONSTRAINT estofertrans_pk PRIMARY KEY ( idestofertrans );

CREATE TABLE estpago (
    idestpago   INTEGER NOT NULL,
    descripcion VARCHAR2(150) NOT NULL
);

ALTER TABLE estpago ADD CONSTRAINT estpago_pk PRIMARY KEY ( idestpago );

CREATE TABLE estpedido (
    idestpedido INTEGER NOT NULL,
    descripcion VARCHAR2(150) NOT NULL
);

ALTER TABLE estpedido ADD CONSTRAINT estpedido_pk PRIMARY KEY ( idestpedido );

CREATE TABLE estsubasta (
    idestsubasta INTEGER NOT NULL,
    descripcion  VARCHAR2(150) NOT NULL
);

ALTER TABLE estsubasta ADD CONSTRAINT estsubasta_pk PRIMARY KEY ( idestsubasta );

CREATE TABLE estventa (
    idestventa  INTEGER NOT NULL,
    descripcion VARCHAR2(150) NOT NULL
);

ALTER TABLE estventa ADD CONSTRAINT estventa_pk PRIMARY KEY ( idestventa );

CREATE TABLE ofertaprod (
    idofertaprod   INTEGER NOT NULL,
    preciounidad   INTEGER NOT NULL,
    cantidadoferta INTEGER NOT NULL,
    fechacosecha   DATE NOT NULL,
    fechacaducidad DATE NOT NULL,
    idpedido       INTEGER NOT NULL,
    idestoferp     INTEGER NOT NULL,
    idusuario      INTEGER NOT NULL
);

ALTER TABLE ofertaprod ADD CONSTRAINT ofertaprod_pk PRIMARY KEY ( idofertaprod );

CREATE TABLE ofertatrans (
    idofertatrans      INTEGER NOT NULL,
    preciooferta       INTEGER NOT NULL,
    cantidadtransporte INTEGER NOT NULL,
    fechaentrega       DATE NOT NULL,
    idsubastatrans     INTEGER NOT NULL,
    idestofertrans     INTEGER NOT NULL,
    patente            VARCHAR2(150) NOT NULL
);

ALTER TABLE ofertatrans ADD CONSTRAINT ofertatrans_pk PRIMARY KEY ( idofertatrans );

CREATE TABLE pago (
    idpago       INTEGER NOT NULL,
    montototal   INTEGER NOT NULL,
    fechapago    DATE NOT NULL,
    idestpago    INTEGER NOT NULL,
    idpedido     INTEGER,
    idventalocal INTEGER
);

ALTER TABLE pago ADD CONSTRAINT pago_pk PRIMARY KEY ( idpago );

CREATE TABLE pedido (
    idpedido           INTEGER NOT NULL,
    fechasolicitud     DATE NOT NULL,
    fechatermino       DATE NOT NULL,
    cantidadsolicitada INTEGER NOT NULL,
    kgunidad           INTEGER NOT NULL,
    preciomaximo       INTEGER NOT NULL,
    idestpedido        INTEGER NOT NULL,
    idusuario          INTEGER NOT NULL,
    idproducto         INTEGER NOT NULL
);

ALTER TABLE pedido ADD CONSTRAINT pedido_pk PRIMARY KEY ( idpedido );

CREATE TABLE producto (
    idproducto INTEGER NOT NULL,
    nombre     VARCHAR2(150) NOT NULL,
    imagen     BLOB
);

ALTER TABLE producto ADD CONSTRAINT producto_pk PRIMARY KEY ( idproducto );

CREATE TABLE rol (
    idrol       INTEGER NOT NULL,
    descripcion VARCHAR2(150 CHAR) NOT NULL
);

ALTER TABLE rol ADD CONSTRAINT rol_pk PRIMARY KEY ( idrol );

CREATE TABLE subastatrans (
    idsubastatrans INTEGER NOT NULL,
    fechasubasta   DATE NOT NULL,
    fechatermino   DATE NOT NULL,
    idpedido       INTEGER,
    idventalocal   INTEGER,
    idtiporefrig   INTEGER NOT NULL,
    idtipotrans    INTEGER NOT NULL,
    idestsubasta   INTEGER NOT NULL
);

ALTER TABLE subastatrans ADD CONSTRAINT subastatrans_pk PRIMARY KEY ( idsubastatrans );

CREATE TABLE tiporefrig (
    idtiporefrig INTEGER NOT NULL,
    descripcion  VARCHAR2(150) NOT NULL
);

ALTER TABLE tiporefrig ADD CONSTRAINT tiporefrig_pk PRIMARY KEY ( idtiporefrig );

CREATE TABLE tipotrans (
    idtipotrans INTEGER NOT NULL,
    descripcion VARCHAR2(150 CHAR) NOT NULL
);

ALTER TABLE tipotrans ADD CONSTRAINT tipotrans_pk PRIMARY KEY ( idtipotrans );

CREATE TABLE transporte (
    patente        VARCHAR2(150) NOT NULL,
    tamanio        VARCHAR2(150) NOT NULL,
    capacidadcarga INTEGER NOT NULL,
    actividad      CHAR(1) NOT NULL,
    idtiporefrig   INTEGER NOT NULL,
    idtipotrans    INTEGER NOT NULL,
    idusuario      INTEGER NOT NULL
);

ALTER TABLE transporte ADD CONSTRAINT transporte_pk PRIMARY KEY ( patente );

CREATE TABLE usuario (
    idusuario   INTEGER NOT NULL,
    rut         VARCHAR2(50 CHAR) NOT NULL,
    nombre      VARCHAR2(255) NOT NULL,
    apellidos   VARCHAR2(255) NOT NULL,
    email       VARCHAR2(255) NOT NULL,
    contrasenia VARCHAR2(255) NOT NULL,
    actividad   CHAR(1) NOT NULL,
    direccion   VARCHAR2(255 CHAR) NOT NULL,
    telefono    VARCHAR2(150 CHAR) NOT NULL,
    idrol       INTEGER NOT NULL
);

ALTER TABLE usuario ADD CONSTRAINT usuario_pk PRIMARY KEY ( idusuario );

CREATE TABLE ventalocal (
    idventalocal INTEGER NOT NULL,
    montototal   INTEGER NOT NULL,
    idofertaprod INTEGER NOT NULL,
    idusuario    INTEGER NOT NULL,
    idestventa   INTEGER NOT NULL
);

ALTER TABLE ventalocal ADD CONSTRAINT ventalocal_pk PRIMARY KEY ( idventalocal );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_usuario_fk FOREIGN KEY ( idusuario )
        REFERENCES usuario ( idusuario );

ALTER TABLE ofertaprod
    ADD CONSTRAINT ofertaprod_estoferp_fk FOREIGN KEY ( idestoferp )
        REFERENCES estoferp ( idestoferp );

ALTER TABLE ofertaprod
    ADD CONSTRAINT ofertaprod_pedido_fk FOREIGN KEY ( idpedido )
        REFERENCES pedido ( idpedido );

ALTER TABLE ofertaprod
    ADD CONSTRAINT ofertaprod_usuario_fk FOREIGN KEY ( idusuario )
        REFERENCES usuario ( idusuario );

ALTER TABLE ofertatrans
    ADD CONSTRAINT ofertatrans_estofertrans_fk FOREIGN KEY ( idestofertrans )
        REFERENCES estofertrans ( idestofertrans );

ALTER TABLE ofertatrans
    ADD CONSTRAINT ofertatrans_subastatrans_fk FOREIGN KEY ( idsubastatrans )
        REFERENCES subastatrans ( idsubastatrans );

ALTER TABLE ofertatrans
    ADD CONSTRAINT ofertatrans_transporte_fk FOREIGN KEY ( patente )
        REFERENCES transporte ( patente );

ALTER TABLE pago
    ADD CONSTRAINT pago_estpago_fk FOREIGN KEY ( idestpago )
        REFERENCES estpago ( idestpago );

ALTER TABLE pago
    ADD CONSTRAINT pago_pedido_fk FOREIGN KEY ( idpedido )
        REFERENCES pedido ( idpedido );

ALTER TABLE pago
    ADD CONSTRAINT pago_ventalocal_fk FOREIGN KEY ( idventalocal )
        REFERENCES ventalocal ( idventalocal );

ALTER TABLE pedido
    ADD CONSTRAINT pedido_estpedido_fk FOREIGN KEY ( idestpedido )
        REFERENCES estpedido ( idestpedido );

ALTER TABLE pedido
    ADD CONSTRAINT pedido_producto_fk FOREIGN KEY ( idproducto )
        REFERENCES producto ( idproducto );

ALTER TABLE pedido
    ADD CONSTRAINT pedido_usuario_fk FOREIGN KEY ( idusuario )
        REFERENCES usuario ( idusuario );

ALTER TABLE subastatrans
    ADD CONSTRAINT subastatrans_estsubasta_fk FOREIGN KEY ( idestsubasta )
        REFERENCES estsubasta ( idestsubasta );

ALTER TABLE subastatrans
    ADD CONSTRAINT subastatrans_pedido_fk FOREIGN KEY ( idpedido )
        REFERENCES pedido ( idpedido );

ALTER TABLE subastatrans
    ADD CONSTRAINT subastatrans_tiporefrig_fk FOREIGN KEY ( idtiporefrig )
        REFERENCES tiporefrig ( idtiporefrig );

ALTER TABLE subastatrans
    ADD CONSTRAINT subastatrans_tipotrans_fk FOREIGN KEY ( idtipotrans )
        REFERENCES tipotrans ( idtipotrans );

ALTER TABLE subastatrans
    ADD CONSTRAINT subastatrans_ventalocal_fk FOREIGN KEY ( idventalocal )
        REFERENCES ventalocal ( idventalocal );

ALTER TABLE transporte
    ADD CONSTRAINT transporte_tiporefrig_fk FOREIGN KEY ( idtiporefrig )
        REFERENCES tiporefrig ( idtiporefrig );

ALTER TABLE transporte
    ADD CONSTRAINT transporte_tipotrans_fk FOREIGN KEY ( idtipotrans )
        REFERENCES tipotrans ( idtipotrans );

ALTER TABLE transporte
    ADD CONSTRAINT transporte_usuario_fk FOREIGN KEY ( idusuario )
        REFERENCES usuario ( idusuario );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_rol_fk FOREIGN KEY ( idrol )
        REFERENCES rol ( idrol );

ALTER TABLE ventalocal
    ADD CONSTRAINT ventalocal_estventa_fk FOREIGN KEY ( idestventa )
        REFERENCES estventa ( idestventa );

ALTER TABLE ventalocal
    ADD CONSTRAINT ventalocal_ofertaprod_fk FOREIGN KEY ( idofertaprod )
        REFERENCES ofertaprod ( idofertaprod );

ALTER TABLE ventalocal
    ADD CONSTRAINT ventalocal_usuario_fk FOREIGN KEY ( idusuario )
        REFERENCES usuario ( idusuario );

--ELIMINAR Y CREAR SECUENCIAS

DROP SEQUENCE SEQ_ID_USUARIO;
CREATE SEQUENCE SEQ_ID_USUARIO;

--INSERTAR DATOS

INSERT INTO ROL (idrol,descripcion) VALUES(1,'ADMINISTRADOR');
INSERT INTO ROL (idrol,descripcion) VALUES(2,'TRANSPORTISTA');
INSERT INTO ROL (idrol,descripcion) VALUES(3,'PRODUCTOR');
INSERT INTO ROL (idrol,descripcion) VALUES(4,'CLIENTE_EXTERNO');
INSERT INTO ROL (idrol,descripcion) VALUES(5,'CLIENTE_LOCAL');
INSERT INTO ROL (idrol,descripcion) VALUES(6,'CONSULTOR');

INSERT INTO USUARIO VALUES(SEQ_ID_USUARIO.NEXTVAL,'19956167-7','MATIAS','SAN MARTIN SALINAS','ma.sanmartins@duocuc.cl','123456',1,'Las araucarias 0287','+56958219103',1);

/

--CREAR PACKAGE
create or replace PACKAGE PKG_METODOS AS 

PROCEDURE OBTENER_USUARIO(CURSOR_T OUT SYS_REFCURSOR, V_ID IN NUMBER);
PROCEDURE OBTENER_USUARIOS(CURSOR_T OUT SYS_REFCURSOR);
PROCEDURE LOGIN(CURSOR_T OUT SYS_REFCURSOR, V_EMAIL IN VARCHAR2, V_CONTRASENIA IN VARCHAR2);
PROCEDURE VALIDAR_EMAIL(CURSOR_T OUT SYS_REFCURSOR, V_EMAIL IN VARCHAR2);
PROCEDURE MODIFICAR_USUARIO(V_ID_USUARIO IN NUMBER,V_ACTIVIDAD IN NUMBER,V_RUT IN VARCHAR2, V_NOMBRE IN VARCHAR2,V_APELLIDOS IN VARCHAR2,V_EMAIL IN VARCHAR2,V_CONTRASENIA IN VARCHAR2,V_DIRECCION IN VARCHAR2,V_TELEFONO IN VARCHAR2,V_ID_ROL IN NUMBER);
PROCEDURE INSERTAR_USUARIO(V_RUT IN VARCHAR2, V_NOMBRE IN VARCHAR2,V_APELLIDOS IN VARCHAR2,V_EMAIL IN VARCHAR2,V_CONTRASENIA IN VARCHAR2,V_DIRECCION IN VARCHAR2,V_TELEFONO IN VARCHAR2,V_ID_ROL IN NUMBER);
PROCEDURE OBTENER_ROLES(CURSOR_T OUT SYS_REFCURSOR);

END PKG_METODOS;

/
--CREAR BODY DEL PACKAGE
create or replace PACKAGE BODY PKG_METODOS AS

--OBTENER USUARIO
PROCEDURE OBTENER_USUARIO(CURSOR_T OUT SYS_REFCURSOR, V_ID IN NUMBER)
AS
BEGIN
    OPEN CURSOR_T FOR SELECT * FROM USUARIO WHERE IDUSUARIO=V_ID;
END OBTENER_USUARIO;

--OBTENER USUARIOS
PROCEDURE OBTENER_USUARIOS(CURSOR_T OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN CURSOR_T FOR SELECT * FROM USUARIO;
END OBTENER_USUARIOS;

--VALIDAR EMAIL
PROCEDURE VALIDAR_EMAIL(CURSOR_T OUT SYS_REFCURSOR, V_EMAIL IN VARCHAR2)
AS
BEGIN
    OPEN CURSOR_T FOR SELECT * FROM USUARIO WHERE EMAIL=V_EMAIL;
END VALIDAR_EMAIL;

--LOGIN
PROCEDURE LOGIN(CURSOR_T OUT SYS_REFCURSOR, V_EMAIL IN VARCHAR2, V_CONTRASENIA IN VARCHAR2)
AS
BEGIN
    OPEN CURSOR_T FOR SELECT * FROM USUARIO WHERE EMAIL=V_EMAIL AND CONTRASENIA=V_CONTRASENIA;
END LOGIN;

--MODIFICAR USUARIO
PROCEDURE MODIFICAR_USUARIO(V_ID_USUARIO IN NUMBER,V_ACTIVIDAD IN NUMBER,V_RUT IN VARCHAR2, V_NOMBRE IN VARCHAR2,V_APELLIDOS IN VARCHAR2,V_EMAIL IN VARCHAR2,V_CONTRASENIA IN VARCHAR2,V_DIRECCION IN VARCHAR2,V_TELEFONO IN VARCHAR2,V_ID_ROL IN NUMBER)
AS
BEGIN
UPDATE USUARIO
SET rut=V_RUT,
nombre=V_NOMBRE,
apellidos=V_APELLIDOS,
email=V_EMAIL,
contrasenia=V_CONTRASENIA,
actividad=V_ACTIVIDAD,
direccion=V_DIRECCION,
telefono=V_TELEFONO,
idrol=V_ID_ROL
WHERE idUsuario=V_ID_USUARIO;
END MODIFICAR_USUARIO;
--REGISTRAR USUARIO
PROCEDURE INSERTAR_USUARIO(V_RUT IN VARCHAR2, V_NOMBRE IN VARCHAR2,V_APELLIDOS IN VARCHAR2,V_EMAIL IN VARCHAR2,V_CONTRASENIA IN VARCHAR2,V_DIRECCION IN VARCHAR2,V_TELEFONO IN VARCHAR2,V_ID_ROL IN NUMBER)
AS
BEGIN
INSERT INTO USUARIO VALUES(SEQ_ID_USUARIO.NEXTVAL,V_RUT,V_NOMBRE,V_APELLIDOS,V_EMAIL,V_CONTRASENIA,1,V_DIRECCION,V_TELEFONO,V_ID_ROL);
END INSERTAR_USUARIO;

--OBTENER ROLES
PROCEDURE OBTENER_ROLES(CURSOR_T OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN CURSOR_T FOR SELECT * FROM ROL;
END OBTENER_ROLES;

END PKG_METODOS;

/
COMMIT;